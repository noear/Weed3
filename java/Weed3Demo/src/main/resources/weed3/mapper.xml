<?xml version="1.0" encoding="utf-8" ?>
<!--
sql 代码块定义指令
 :return（属性：返回类型）
 :declare（属性：变量预申明）

 :caching（属性：缓存服务）
 :cacheClear（属性：清除缓存）
 :cacheTag（属性：缓存标签）
 :usingCache（属性：缓存时间,int）

if 判断控制指令（没有else）
 test （属性：判断检测代码）
for 循环控制指令
 var （属性：循环变量申明）
 items （属性：集合变量名称）

name:type    = 变量申明
@{name:type} = 变量注入
${name:type} = 变量替换

//列表([]替代<>)
:return="List[weed3demo.mapper.UserModel]" => List<UserModel>
:return="List[String]" => List<String> （Date,Long,...大写开头的单值类型）
:return="MapList" => List<Map<String,Object>>
:return="DataList" => DataList

//一行
:return="weed3demo.mapper.UserModel" => UserModel
:return="Map" => Map<String,Object>
:return="DataItem" => DataItem

//单值
:return="String" => String （任何单职类型）
-->
<mapper namespace="org.xxx.xxx" :db="testdb">
    <sql id="user_add" :return="int">
        INSERT user(user_id) VALUES(@{user_id:int})
    </sql>

    <sql id="user_add_if" :return="int">
        INSERT user(user_id
        <if test="mobile !=null">
            ,mobile
        </if>
        ) VALUES(@{user_id:int}
        <if test='(mobile !=null) || (mobile.startsWith("xml"))'>
            ,@{mobile:String}
        </if>
        )
    </sql>

    <sql id="user_add_for">
        INSERT user(id,mobile,sex) VALUES
        <for var="m:weed3demo.mapper.UserModel" items="list">
            (@{m.user_id},@{m.mobile},@{m.sex})
        </for>
    </sql>

    <sql id="user_del">
        DELETE FROM user WHERE id=@{user_id:long}
        <if test="sex > 0">
            AND sex=@{sex:int}
        </if>
    </sql>

    <sql id="user_set"
         :caching="localCache"
         :cacheClear="user_${user_id},user_1">
        UPDATE user SET mobile=@{mobile:String},sex=@{sex:int}
        <if test="icon != null">
            icon=@{icon:String}
        </if>
    </sql>

    <sql id="user_get"
         :declare="foList:int,user_id:long"
         :return="List[weed3demo.mapper.UserModel]"
         :caching="localCache"
         :cacheTag="user_${user_id},user_1">
        SELECT id,${cols:String} FROM user WHERE sex>1 AND mobile=@{mobile:String}
        <if test="foList == 0">
            AND type='article'
        </if>
        <if test="foList == 1">
            AND type='colub'
        </if>
        <if test="foList == 2">
            AND type='post'
        </if>
    </sql>
</mapper>
<!--
//使用方案1
db.call("@userdb.user_set").set("user_id",12).insert()
db.call("@userdb.user_add").setMap(map).insert()

//使用方案2
public interface userdb{
    UserModel user_get(int user_id);
}
userdb.user_get(12);

-->